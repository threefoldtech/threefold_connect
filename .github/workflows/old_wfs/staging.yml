name: staging

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
#       - uses: actions/checkout@v1
#       - uses: actions/setup-java@v1
#         with:
#           java-version: '12.x'
      
#       # Setup the flutter environment.
#       - uses: subosito/flutter-action@v1
#         with:
#           channel: 'stable' # 'dev', 'alpha', default to: 'stable'
#           flutter-version: '2.10.1' # you can also specify exact version of flutter
      
#       # Get flutter dependencies.
#       - run: cd app && flutter pub get
      
#       # Check for any formatting issues in the code.
#       - run: flutter format --set-exit-if-changed .
      
#       # Statically analyze the Dart code for any errors.
#       - run: flutter analyze .
      
#       # Build apk.
#       - run: flutter build apk
      
#       # Upload generated apk to the artifacts.
#       - uses: actions/upload-artifact@v1
#         with:
#           name: release-apk
#           path: app/apks/app-release.apk

      - uses: actions/checkout@v2
      - name: Login to docker hub
        run: docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_TOKEN }}
      - name: Set config
        run: mv frontend/public/config.staging.js frontend/public/config.js
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag jimber/3botlogin:staging-${{ github.sha }}
      - name: Push the Docker image
        run: docker push jimber/3botlogin:staging-${{ github.sha }}
        
  deploy:
    needs: build
    runs-on: tfc-connect-staging
    steps:
      - name: Login to docker hub
        run: docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_TOKEN }}
      - name: kill old docker
        run: docker rm -f 3botlogin || true
      - name: Pull Image
        run: docker pull jimber/3botlogin:staging-${{ github.sha }}
      - name: Run new docker
        run: docker run -d -it --restart=unless-stopped --name 3botlogin -v /opt/3botlogin/pythonsqlite.db:/usr/share/nginx/backend/pythonsqlite.db -v /opt/3botlogin/config.ini:/usr/share/nginx/backend/config.ini --network=proxy jimber/3botlogin:staging-${{ github.sha }}
